/*
 * Created on 2025-03-20 ( 10:03:17 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 4.2.0
 */
package org.demo.entities;

import static junit.framework.TestCase.assertNotNull;

import org.demo.entities.tooling.JpaTest;
import org.junit.Test;

public class SessionsJpaTest extends JpaTest {

    public static Sessions getInitEntity() {
    	Sessions entity = new Sessions();
		entity.setSessionId( "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" ) ;
		entity.setUserId( UsersJpaTest.getInitEntity().getUserId() ) ;
		entity.setCreatedAt( java.time.LocalDateTime.parse("2001-05-21T01:46:52") ) ;
		entity.setExpiresAt( java.time.LocalDateTime.parse("2001-05-21T01:46:52") ) ;
    	return entity;
	}
	
    private Sessions createEntity() {
    	Sessions entity = new Sessions();
		entity.setSessionId( "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" ) ;
		entity.setUserId( UsersJpaTest.getInitEntity().getUserId() ) ;
		entity.setCreatedAt( java.time.LocalDateTime.parse("2002-05-21T02:46:52") ) ;
		entity.setExpiresAt( java.time.LocalDateTime.parse("2002-05-21T02:46:52") ) ;
    	return entity;
    }


    private Object getEntityKey(Sessions entity) {
    	return entity.getSessionId();
    }

    @Test
    public void testFind() {
    	Sessions e = find(Sessions.class, getEntityKey(getInitEntity()) );
		assertNotNull(e);
    }
    
    @Test
    public void testPersistFind() {
    	Sessions entity = createEntity();
    	Object key = getEntityKey(entity);

    	// if entity doesn't exist yet
    	if ( find(Sessions.class, key) == null ) {

	    	// Create with 'persist'
    		persistAndRefresh(entity);
    	
			// Find
			Sessions entity2 = find(Sessions.class, key);
			assertNotNull(entity2);
        
			// Remove (use only if no risk of referential integrity constraint violation)
			// findAndRemove(Sessions.class, key);			
			// assertNull(find(Sessions.class, key));
		}
    }

    @Test
    public void testMergeFind() {
    	Sessions entity = createEntity();
    	Object key = getEntityKey(entity);

    	// Create or update with 'merge'
    	mergeAndRefresh(entity);
    	
    	// Find
    	Sessions entity2 = find(Sessions.class, key);
        assertNotNull(entity2);
        
		// Remove (use only if no risk of referential integrity constraint violation)
		// findAndRemove(Sessions.class, key);			
        // assertNull(find(Sessions.class, key));
    }

}
