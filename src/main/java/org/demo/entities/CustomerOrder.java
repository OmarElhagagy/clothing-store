/*
 * Created on 2025-03-20 ( 10:03:14 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 4.2.0
 */
package org.demo.entities;

import java.io.Serializable;
import java.util.Objects;  import java.math.BigDecimal;
import java.time.LocalDate;
import javax.persistence.*;

/**
 * JPA entity class for "CustomerOrder"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="Customer_Order", schema="public", catalog="clothes_store_db" )
public class CustomerOrder implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="Order_ID", nullable=false)
    private int        orderId ;

    //--- ENTITY DATA FIELDS 
    @Column(name="Employee_Seller_ID", nullable=false)
    private int        employeeSellerId ;

    @Column(name="Customer_ID", nullable=false)
    private int        customerId ;

    @Column(name="Payment_Method_ID", nullable=false)
    private int        paymentMethodId ;

    @Column(name="Address_ID")
    private Integer    addressId ;

    @Column(name="Purchase_Date", nullable=false)
    private LocalDate  purchaseDate ;

    @Column(name="Total_Price", nullable=false)
    private BigDecimal totalPrice ;

    @Column(name="Status", nullable=false, length=20)
    private String     status ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @ManyToOne
    @JoinColumn(name="Address_ID", referencedColumnName="Address_ID", insertable=false, updatable=false)
    private Addresses  addresses ; 

    @ManyToOne
    @JoinColumn(name="Customer_ID", referencedColumnName="Customer_ID", insertable=false, updatable=false)
    private Customer   customer ; 

    @ManyToOne
    @JoinColumn(name="Employee_Seller_ID", referencedColumnName="Employee_ID", insertable=false, updatable=false)
    private Employee   employee ; 

    @ManyToOne
    @JoinColumn(name="Payment_Method_ID", referencedColumnName="Payment_Method_ID", insertable=false, updatable=false)
    private PaymentMethods paymentmethods ; 


    /**
     * Constructor
     */
    public CustomerOrder() {
        super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS
    public void setOrderId( int orderId ) {
        this.orderId = orderId ;
    }
    public int getOrderId() {
        return this.orderId;
    }

    public void setEmployeeSellerId( int employeeSellerId ) {
        this.employeeSellerId = employeeSellerId ;
    }
    public int getEmployeeSellerId() {
        return this.employeeSellerId;
    }

    public void setCustomerId( int customerId ) {
        this.customerId = customerId ;
    }
    public int getCustomerId() {
        return this.customerId;
    }

    public void setPaymentMethodId( int paymentMethodId ) {
        this.paymentMethodId = paymentMethodId ;
    }
    public int getPaymentMethodId() {
        return this.paymentMethodId;
    }

    public void setAddressId( Integer addressId ) {
        this.addressId = addressId ;
    }
    public Integer getAddressId() {
        return this.addressId;
    }

    public void setPurchaseDate( LocalDate purchaseDate ) {
        this.purchaseDate = purchaseDate ;
    }
    public LocalDate getPurchaseDate() {
        return this.purchaseDate;
    }

    public void setTotalPrice( BigDecimal totalPrice ) {
        this.totalPrice = totalPrice ;
    }
    public BigDecimal getTotalPrice() {
        return this.totalPrice;
    }

    public void setStatus( String status ) {
        this.status = status ;
    }
    public String getStatus() {
        return this.status;
    }

    //--- GETTERS FOR LINKS
    public Addresses getAddresses() {
        return this.addresses;
    } 

    public Customer getCustomer() {
        return this.customer;
    } 

    public Employee getEmployee() {
        return this.employee;
    } 

    public PaymentMethods getPaymentmethods() {
        return this.paymentmethods;
    } 

    //--- toString specific method
    @Override
	public String toString() { 
		String separator = "|";
		StringBuilder sb = new StringBuilder();
		sb.append("CustomerOrder[");
		sb.append("orderId=").append(orderId);
		sb.append(separator).append("employeeSellerId=").append(employeeSellerId);
		sb.append(separator).append("customerId=").append(customerId);
		sb.append(separator).append("paymentMethodId=").append(paymentMethodId);
		sb.append(separator).append("addressId=").append(addressId);
		sb.append(separator).append("purchaseDate=").append(purchaseDate);
		sb.append(separator).append("totalPrice=").append(totalPrice);
		sb.append(separator).append("status=").append(status);
		sb.append("]");
		return sb.toString();
	}

    //--- equals and hashCode methods
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        CustomerOrder that = (CustomerOrder) o;
        return orderId == that.orderId#elseObjects.equals(orderId, that.orderId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(orderId);
    }
}