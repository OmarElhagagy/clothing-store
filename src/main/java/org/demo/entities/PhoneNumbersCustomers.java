/*
 * Created on 2025-03-20 ( 10:03:15 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 4.2.0
 */
package org.demo.entities;

import java.io.Serializable;
import java.util.Objects;  import javax.persistence.*;

/**
 * JPA entity class for "PhoneNumbersCustomers"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="Phone_Numbers_Customers", schema="public", catalog="clothes_store_db" )
public class PhoneNumbersCustomers implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @Column(name="Phone_Number", nullable=false, length=20)
    private String     phoneNumber ;

    //--- ENTITY DATA FIELDS 
    @Column(name="Customer_ID", nullable=false)
    private int        customerId ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @ManyToOne
    @JoinColumn(name="Customer_ID", referencedColumnName="Customer_ID", insertable=false, updatable=false)
    private Customer   customer ; 


    /**
     * Constructor
     */
    public PhoneNumbersCustomers() {
        super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS
    public void setPhoneNumber( String phoneNumber ) {
        this.phoneNumber = phoneNumber ;
    }
    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    public void setCustomerId( int customerId ) {
        this.customerId = customerId ;
    }
    public int getCustomerId() {
        return this.customerId;
    }

    //--- GETTERS FOR LINKS
    public Customer getCustomer() {
        return this.customer;
    } 

    //--- toString specific method
    @Override
	public String toString() { 
		String separator = "|";
		StringBuilder sb = new StringBuilder();
		sb.append("PhoneNumbersCustomers[");
		sb.append("phoneNumber=").append(phoneNumber);
		sb.append(separator).append("customerId=").append(customerId);
		sb.append("]");
		return sb.toString();
	}

    //--- equals and hashCode methods
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        PhoneNumbersCustomers that = (PhoneNumbersCustomers) o;
        return ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(phoneNumber);
    }
}