/*
 * Created on 2025-03-20 ( 10:03:15 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 4.2.0
 */
package org.demo.entities;

import java.io.Serializable;
import java.util.Objects;  import javax.persistence.*;

/**
 * JPA entity class for "PaymentMethods"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="Payment_Methods", schema="public", catalog="clothes_store_db" )
public class PaymentMethods implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="Payment_Method_ID", nullable=false)
    private int        paymentMethodId ;

    //--- ENTITY DATA FIELDS 
    @Column(name="Method_Name", nullable=false, length=50)
    private String     methodName ;


    //--- ENTITY LINKS ( RELATIONSHIP )

    /**
     * Constructor
     */
    public PaymentMethods() {
        super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS
    public void setPaymentMethodId( int paymentMethodId ) {
        this.paymentMethodId = paymentMethodId ;
    }
    public int getPaymentMethodId() {
        return this.paymentMethodId;
    }

    public void setMethodName( String methodName ) {
        this.methodName = methodName ;
    }
    public String getMethodName() {
        return this.methodName;
    }

    //--- GETTERS FOR LINKS
    //--- toString specific method
    @Override
	public String toString() { 
		String separator = "|";
		StringBuilder sb = new StringBuilder();
		sb.append("PaymentMethods[");
		sb.append("paymentMethodId=").append(paymentMethodId);
		sb.append(separator).append("methodName=").append(methodName);
		sb.append("]");
		return sb.toString();
	}

    //--- equals and hashCode methods
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        PaymentMethods that = (PaymentMethods) o;
        return paymentMethodId == that.paymentMethodId#elseObjects.equals(paymentMethodId, that.paymentMethodId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(paymentMethodId);
    }
}